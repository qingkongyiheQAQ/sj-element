import{_ as e,c as d,o,a0 as a}from"./chunks/framework.CtuHDlBN.js";const u=JSON.parse('{"title":"Button","description":"Button 组件文档","frontmatter":{"title":"Button","description":"Button 组件文档","next":{"link":"/components/collapse","text":"Collapse 折叠面板"},"prev":{"link":"/get-started","text":"快速开始"}},"headers":[],"relativePath":"components/button.md","filePath":"components/button.md"}'),r={name:"components/button.md"};function n(c,t,l,i,h,s){return o(),d("div",null,t[0]||(t[0]=[a('<h1 id="button-按钮" tabindex="-1">Button 按钮 <a class="header-anchor" href="#button-按钮" aria-label="Permalink to &quot;Button 按钮&quot;">​</a></h1><p>常用的操作按钮。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用 <code>type</code>、<code>plain</code>、 <code>round</code>和 <code>circle</code>来定义按钮的样式。</p><p>::: preview demo-preview=../demo/button/Basic.vue :::</p><h2 id="禁用状态" tabindex="-1">禁用状态 <a class="header-anchor" href="#禁用状态" aria-label="Permalink to &quot;禁用状态&quot;">​</a></h2><p>你可以使用 <code>disabled</code> 属性来定义按钮是否被禁用。</p><p>::: preview demo-preview=../demo/button/Disabled.vue :::</p><h2 id="图标按钮" tabindex="-1">图标按钮 <a class="header-anchor" href="#图标按钮" aria-label="Permalink to &quot;图标按钮&quot;">​</a></h2><p>使用 <code>icon</code>属性来定义按钮的图标。</p><p>::: preview demo-preview=../demo/button/Icon.vue :::</p><h2 id="按钮组" tabindex="-1">按钮组 <a class="header-anchor" href="#按钮组" aria-label="Permalink to &quot;按钮组&quot;">​</a></h2><p>使用 <code>&lt;er-button-group&gt;</code> 对多个按钮分组。</p><p>::: preview demo-preview=../demo/button/Group.vue :::</p><h2 id="加载状态" tabindex="-1">加载状态 <a class="header-anchor" href="#加载状态" aria-label="Permalink to &quot;加载状态&quot;">​</a></h2><p>使用 <code>loading</code>属性来定义按钮的加载状态。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>您可以使用 <code>loading</code> 插槽或 <code>loadingIcon</code> 属性自定义您的 loading 图标</p><p>ps: <code>loading</code> 插槽优先级高于 <code>loadingIcon</code> 属性</p></div><p>::: preview demo-preview=../demo/button/Loading.vue :::</p><h2 id="按钮尺寸" tabindex="-1">按钮尺寸 <a class="header-anchor" href="#按钮尺寸" aria-label="Permalink to &quot;按钮尺寸&quot;">​</a></h2><p>使用 <code>size</code>属性来定义按钮的尺寸。</p><p>::: preview demo-preview=../demo/button/Size.vue :::</p><h2 id="tag" tabindex="-1">Tag <a class="header-anchor" href="#tag" aria-label="Permalink to &quot;Tag&quot;">​</a></h2><p>可以自定义元素标签。例如，按钮，div，路由链接，nuxt 链接。</p><p>::: preview demo-preview=../demo/button/Tag.vue :::</p><h2 id="节流模式" tabindex="-1">节流模式 <a class="header-anchor" href="#节流模式" aria-label="Permalink to &quot;节流模式&quot;">​</a></h2><p>可以通过 <code>useThrottle</code> 属性来定义按钮是否使用节流模式 默认为 true。</p><p>::: preview demo-preview=../demo/button/Throttle.vue :::</p><h2 id="button-api" tabindex="-1">Button API <a class="header-anchor" href="#button-api" aria-label="Permalink to &quot;Button API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>size</td><td>尺寸</td><td><code>enum</code> - <code>&#39;large&#39;| &#39;default&#39;| &#39;small&#39;</code></td><td>—</td></tr><tr><td>type</td><td>类型</td><td><code>enum</code> - <code>&#39;primary&#39;| &#39;success&#39;| &#39;warning&#39;| &#39;danger&#39;| &#39;info&#39;</code></td><td>info</td></tr><tr><td>plain</td><td>是否为朴素按钮</td><td><code>boolean</code></td><td>false</td></tr><tr><td>round</td><td>是否为圆角按钮</td><td><code>boolean</code></td><td>false</td></tr><tr><td>circle</td><td>是否为圆形按钮</td><td><code>boolean</code></td><td>false</td></tr><tr><td>loading</td><td>是否为加载中状态</td><td><code>boolean</code></td><td>false</td></tr><tr><td>loading-icon</td><td>自定义加载中状态图标组件</td><td><code>string</code></td><td>spinner</td></tr><tr><td>disabled</td><td>按钮是否为禁用状态</td><td><code>boolean</code></td><td>false</td></tr><tr><td>icon</td><td>按钮图标</td><td><code>string</code></td><td>-</td></tr><tr><td>autofocus</td><td>是否自动聚焦(原生<code>autofocus</code>属性)</td><td><code>boolean</code></td><td>false</td></tr><tr><td>native-type</td><td>原生 type 属性</td><td><code>enum</code> - <code>&#39;button&#39;| &#39;submit&#39;| &#39;reset&#39;</code></td><td>button</td></tr><tr><td>tag</td><td>自定义元素标签</td><td><code>string</code>/<code>Component</code></td><td>button</td></tr><tr><td>use-throttle</td><td>是否使用节流模式</td><td><code>boolean</code></td><td>true</td></tr><tr><td>throttle-duration</td><td>节流模式下，节流时间间隔(ms)</td><td><code>number</code></td><td>500</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>click</td><td>按钮点击事件</td><td><code>(event: MouseEvent)=&gt; void</code></td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>默认插槽, 按钮内容</td></tr><tr><td>loading</td><td>自定义加载图标</td></tr></tbody></table><h3 id="expose" tabindex="-1">Expose <a class="header-anchor" href="#expose" aria-label="Permalink to &quot;Expose&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>ref</td><td>按钮 html 元素</td><td><code>Ref&lt;HTMLButtonElement&gt;</code></td></tr><tr><td>size</td><td>按钮尺寸</td><td><code>ComputedRef&lt;&#39;&#39;|&#39;small&#39; |&#39;large&#39;&gt;</code></td></tr><tr><td>type</td><td>按钮类型</td><td><code>ComputedRef&lt;&#39;&#39;|&#39;primary&#39; |...&gt;</code></td></tr><tr><td>disabled</td><td>按钮禁用状态</td><td><code>ComputedRef&lt;boolean&gt;</code></td></tr></tbody></table><h2 id="buttongroup-api" tabindex="-1">ButtonGroup API <a class="header-anchor" href="#buttongroup-api" aria-label="Permalink to &quot;ButtonGroup API&quot;">​</a></h2><h3 id="props-1" tabindex="-1">Props <a class="header-anchor" href="#props-1" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>size</td><td>尺寸</td><td><code>enum</code> - <code>&#39;large&#39;| &#39;default&#39;| &#39;small&#39;</code></td><td>—</td></tr><tr><td>type</td><td>类型</td><td><code>enum</code> - <code>&#39;primary&#39;| &#39;success&#39;| &#39;warning&#39;| &#39;danger&#39;| &#39;info&#39;</code></td><td>info</td></tr><tr><td>disabled</td><td>按钮组是否为禁用状态</td><td><code>boolean</code></td><td>false</td></tr></tbody></table><h3 id="slots-1" tabindex="-1">Slots <a class="header-anchor" href="#slots-1" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Sub Component</th></tr></thead><tbody><tr><td>default</td><td>默认插槽</td><td>Button</td></tr></tbody></table>',41)]))}const b=e(r,[["render",n]]);export{u as __pageData,b as default};
